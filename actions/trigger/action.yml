name: 'PyPi-data toolchain'
description: 'PyPi-data toolchain'
inputs:
  push:
    description: 'Push ref?'
    required: false
    default: 'true'
  limit:
    description: 'Limit'
    required: false
    default: '5000'
  token:
    description: 'Github token'
    required: true
  workspace:
    description: 'Path to github workspace'
    required: true
  run-id:
    description: 'Github actions run ID'
    required: true
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v6
      id: is-only-running
      with:
        script: |
          let x = await github.rest.actions.listWorkflowRuns({
            owner: "pypi-data",
            repo: context.repo.repo,
            workflow_id: "trigger.yml",
          });
          const is_running = (element) => element.status == "in_progress" && element.run_number != context.runNumber;

          if (x.data.workflow_runs.some(is_running)) {
            core.setOutput("should-run", "false");
          } else {
            core.setOutput("should-run", "true");
          }

    - if: ${{steps.is-only-running.outputs.should-run == 'true' }}
      shell: bash
      run: |
        git -C ${{ inputs.workspace }} fetch --filter=tree:0 --depth=1 origin code:code || true

    - uses: robinraju/release-downloader@v1.8
      if: ${{steps.is-only-running.outputs.should-run == 'true' }}
      with:
        repository: "pypi-data/toolchain"
        fileName: "pypi-data-toolchain.tar.gz"
        extract: true
        latest: true
        out-file-path: "toolchain"

    - shell: bash
      if: ${{steps.is-only-running.outputs.should-run == 'true' }}
      run: |
        ${{ inputs.workspace }}/toolchain/pypi-data-toolchain --version

    - shell: bash
      id: should-run
      if: ${{steps.is-only-running.outputs.should-run == 'true' }}
      run: |
        echo "should-run=true" >> "$GITHUB_OUTPUT"

    - shell: bash
      if: ${{steps.is-only-running.outputs.should-run == 'true' && steps.should-run.outputs.should-run == 'true' }}
      run: |
        ${{ inputs.workspace }}/toolchain/pypi-data-toolchain extract ${{ inputs.workspace }} \
          --limit=${{ inputs.limit }} \
          --index-file-name=index-${{ inputs.run-id }}.parquet | git fast-import --force --max-pack-size=200M

    - shell: bash
      id: commit
      if: ${{steps.is-only-running.outputs.should-run == 'true' && steps.should-run.outputs.should-run == 'true' }}
      run: |
        git -C ${{ inputs.workspace }} config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git -C ${{ inputs.workspace }} config --local user.name "github-actions[bot]"
        
        if [[ $(git diff --name-only --exit-code index.json) ]]; then
          git -C ${{ inputs.workspace }} add index.json
          git -C ${{ inputs.workspace }} commit -m "Add changes"
          git -C ${{ inputs.workspace }} log -n 1 code
          echo "has-changes=true" >> "$GITHUB_OUTPUT"
        else
          echo "has-changes=false" >> "$GITHUB_OUTPUT"
          mv index-${{ inputs.run-id }}.parquet index-last.parquet
          echo "No changes"
        fi
        

    - name: push code
      shell: bash
      if: ${{steps.commit.outputs.has-changes == 'true' && steps.is-only-running.outputs.should-run == 'true' && steps.should-run.outputs.should-run == 'true' }}
      run: |
        git config http.postBuffer 524288000
        du -hs .git/objects/pack/*
        git -C ${{ inputs.workspace }} push --atomic origin refs/heads/code:refs/heads/code +main:main

    - name: Publish
      uses: softprops/action-gh-release@v1
      if: ${{steps.is-only-running.outputs.should-run == 'true' && steps.should-run.outputs.should-run == 'true' }}
      with:
        draft: false
        name: "Index"
        tag_name: "latest"
        files: "index*.parquet"
        token: ${{ inputs.token }}
