on:
  push:
    branches:
      - main
  workflow_dispatch:


name: CI

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: "1"
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
#          args: --release

      - name: Package
        shell: bash
        run: |
          cd target/debug
          tar czvf ../../pypi-data-toolchain.tar.gz pypi-data-toolchain
          cd -
      - uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: "latest"
          tag_exists_error: false
          force_push_tag: true
          message: "Latest release"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          name: "Latest Release"
          tag_name: "latest"
          files: 'pypi-data-toolchain.tar.gz'

  test_action:
    name: Test workflow
    runs-on: ubuntu-latest
    needs:
      - build_and_test
    steps:
      - uses: actions/checkout@v3
        with:
          path: "input_repo/"
      - run: |
          cp input_repo/example/index.json $GITHUB_WORKSPACE/input_repo/index.json
      - run: |
          git -C  ${{ env.GITHUB_WORKSPACE }}/input_repo/ fetch --filter=blob:none code
#          echo https://github.com/${{ github.repository }}.git
#          git clone -b code https://github.com/${{ github.repository }}.git --bare --filter=blob:none $GITHUB_WORKSPACE/code_repo/
      - name: Run action
        uses: ./
        with:
          push: "false"
          token: ${{ secrets.GITHUB_TOKEN }}
          code_repo: ${{ env.GITHUB_WORKSPACE }}/code_repo/
          input_repo: ${{ env.GITHUB_WORKSPACE }}/input_repo/
          workspace: ${{ env.GITHUB_WORKSPACE }}
